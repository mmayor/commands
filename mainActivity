package com.darklab.ble;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.Manifest;
import android.os.Bundle;
import android.content.Context;
import android.content.Intent;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import android.content.pm.PackageManager;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothManager;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothGatt;
import android.bluetooth.BluetoothGattCallback;
import android.bluetooth.BluetoothGattCharacteristic;
import android.bluetooth.BluetoothGattService;
import android.bluetooth.BluetoothProfile;
import android.bluetooth.le.BluetoothLeScanner;
import android.bluetooth.le.ScanCallback;
import android.bluetooth.le.ScanFilter;
import android.bluetooth.le.ScanResult;
import android.bluetooth.le.ScanSettings;
import android.app.Activity;
import android.os.Handler;
import java.util.ArrayList;
import java.util.List;
import android.util.Log;
import  android.view.View;


public class MainActivity extends AppCompatActivity {


    private Handler handler = new Handler();
    private Bluetooth bluetooth;

    private RecyclerView recyclerView;
    private RecyclerView.Adapter mAdapter;
    private RecyclerView.LayoutManager layoutManager;
    private EditText et1;
    private Button bt1;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        et1= (EditText) findViewById(R.id.editText);
        bt1= (Button) findViewById(R.id.button);


        if (!getPackageManager().hasSystemFeature(PackageManager.FEATURE_BLUETOOTH_LE)) {
            Toast.makeText(this, R.string.ble_not_supported, Toast.LENGTH_SHORT).show();
            finish();
        }

        if (ContextCompat.checkSelfPermission(this,
                Manifest.permission.ACCESS_FINE_LOCATION)
                != PackageManager.PERMISSION_GRANTED) {

            if (ActivityCompat.shouldShowRequestPermissionRationale(this,
                    Manifest.permission.ACCESS_FINE_LOCATION)) {
            } else {

                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION},1);
            }
        } else {
            bluetooth = new Bluetooth(this);
            Log.i("bluetooth", "Create");
        }


    }


    public Boolean getStatus(){

        if (bluetooth.stateNow == "STATE_CONNECTED") {

            return true;
        } else

            {return false;}

    }


    public void scanNew(View view){

        Log.i("name_button", bt1.getText().toString());
        if (bluetooth.stateNow != "STATE_CONNECTED"){


            if (bluetooth.bluetoothAdapter == null || !bluetooth.bluetoothAdapter.isEnabled()) {
                Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
                startActivityForResult(enableBtIntent, 1);
                Log.i("bluetooth", "Intent");
            }
            // bluetooth.onResume();
            bluetooth.onResume(et1.getText().toString());
            Log.i("name_button", bt1.getText().toString());
//            Boolean temWrite= bluetooth.writeCharacteristic(bluetooth.gatt, bluetooth.hoberPowerService, bluetooth.hoberPower);
//            Log.i("TEMP_WRITE", String.valueOf(temWrite));

        } else

        {
            bluetooth.onClose();
            Log.i("name_button", bt1.getText().toString());

        }




        // bluetooth.
        // bluetooth.onClose();

        // et1.setActivated(getStatus());

    }

/**
    @Override
    protected void onResume() {
        super.onResume();
        if (bluetooth.bluetoothAdapter == null || !bluetooth.bluetoothAdapter.isEnabled()) {
            Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
            startActivityForResult(enableBtIntent, 1);
            Log.i("bluetooth", "Intent");
        }
        bluetooth.onResume();
    }
*/



    @Override
    protected void onDestroy() {
        Log.i("bluetooth", "Destroy");
        /*
        if (gatt == null) {
            return;
        }

        gatt.close();
        gatt = null;
        */
        super.onDestroy();
    }



    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == 1) {
            if (resultCode == Activity.RESULT_CANCELED) {
                Log.i("bluetooth", "NOT ENABLED");
                finish();
                return;
            }
        }
        super.onActivityResult(requestCode, resultCode, data);
    }


}
